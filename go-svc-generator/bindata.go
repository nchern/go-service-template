// Code generated by go-bindata.
// sources:
// go-service-template/Dockerfile
// go-service-template/Makefile
// go-service-template/README.md
// go-service-template/deploy/README.md
// go-service-template/docker-compose.yml
// go-service-template/main.go
// go-service-template/pkg/README.md
// go-service-template/pkg/cli/cli.go
// go-service-template/pkg/cli/create.go
// go-service-template/pkg/srv/srv.go
// go-service-template/scripts/build.sh
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _goServiceTemplateDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x4f\x4b\xc3\x40\x10\xc5\xef\xf3\x29\x06\x7a\xd1\x43\x12\x7b\x2b\x82\x17\x35\x42\x91\x26\x21\x56\xb4\xc7\xcd\x66\xdc\x8c\xee\x3f\x76\xa7\xe2\xc7\x97\x68\x05\x95\x1c\x77\xdf\x63\xde\xef\x77\xd7\xb7\x3b\x34\xc1\x2a\x6f\x2e\xd7\xe5\x06\x55\xc6\xe1\xc8\x76\xa4\x04\xf0\xd4\xf6\xf7\xb7\xdb\x1e\x2b\x13\xaa\x9c\x74\x65\x58\xa6\xe3\x50\xea\xe0\x2a\xaf\x27\x4a\xbe\x32\xa1\xc8\x94\xde\x59\x53\x21\xe4\xa2\x55\x42\x4b\x7f\x70\xd3\x76\x07\x2c\xb1\x04\x58\xe1\xf5\x7c\x1e\x65\x22\x8c\x29\xbc\x92\x16\x64\x9f\x79\x24\x54\x1e\xd9\x0b\x25\x47\x23\x2b\x21\xd4\xc1\x8b\x62\x4f\x09\xfa\xc7\x06\x9d\x7a\xa3\xb9\x29\xca\xda\x62\xa4\x98\x7f\x1e\x00\xff\x1c\x7e\x81\xc3\xf7\x72\x51\xbc\xa4\xe0\xae\x4e\x62\x5f\x3e\x03\x2f\xd2\xe3\x22\x3e\xac\x70\xa7\xd8\xe3\x29\xc0\x18\x92\x40\xfd\xdc\xb5\x0f\x35\x6e\x2e\xe6\xf8\x2c\x44\xe1\xe0\x95\x3d\x47\x47\x92\x58\x67\xa4\x8f\x18\x32\x7b\xf3\xb7\xbd\x06\xa8\x9b\x7d\x7f\xe8\xda\x6d\xb3\x5f\x5e\xfb\x0c\x00\x00\xff\xff\x5b\x61\x3c\x37\x93\x01\x00\x00")

func goServiceTemplateDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_goServiceTemplateDockerfile,
		"go-service-template/Dockerfile",
	)
}

func goServiceTemplateDockerfile() (*asset, error) {
	bytes, err := goServiceTemplateDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "go-service-template/Dockerfile", size: 403, mode: os.FileMode(420), modTime: time.Unix(1549574560, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _goServiceTemplateMakefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x51\xb1\x6e\xc2\x30\x14\x9c\xf1\x57\x9c\x44\x86\x64\x88\xb3\x47\x42\x6a\x06\x44\x19\x80\x0e\x61\xe8\x54\x39\xf6\x23\xb1\x6a\xec\xc8\x36\x45\xfd\xfb\xca\x09\x08\x44\x97\xe7\x77\xa7\x3b\xdd\xc9\x6f\xdf\xec\xd6\xab\xde\x95\x81\xfc\x8f\x96\x54\x46\x3a\x8f\x46\x44\x62\x6d\xb3\x59\xa5\x25\x44\xb6\xdd\x35\x9b\xf5\xd7\xa4\xcc\xf2\xf4\x14\x75\x96\xb7\xcd\xa6\x60\x87\x63\x7b\xa7\x18\x5b\x62\x6d\xbd\x96\x03\xe2\x40\x90\xee\x7c\x16\x56\x05\x74\x64\xdc\x15\x57\x1d\x07\x88\x71\xf4\x6e\xf4\x5a\x44\x82\x71\xbd\x96\xd0\x27\x58\x92\x14\x82\xf0\xbf\x6c\x89\xad\x8d\xde\xa9\x8b\xd4\xb6\x87\x40\x18\xc8\x18\x04\xe9\xf5\x18\x73\xe2\x3d\xd7\x36\x3a\xf0\x6a\x66\x42\x85\x93\x33\x8a\x7c\x01\xe9\x2e\x46\xa1\x4b\xa1\x56\x6a\x45\x9e\x14\x44\x80\x40\xef\x9c\xc2\xe8\x85\x8c\x5a\x12\x63\xfc\xe3\xfd\xb0\xff\xac\xa1\x6d\x88\xc2\x98\x52\xd1\x18\xd8\x33\xa8\xd9\xe2\xad\x77\xe8\x29\xa2\x54\xe0\x15\xe7\xfc\xe1\xea\x2e\xda\x28\x36\xcd\x9a\x2d\x90\x84\x13\x40\xe9\xd0\x69\x5b\x65\xf9\xe1\xd8\x16\xe0\xff\x72\xee\x11\x35\xa6\xdf\x9c\xad\x37\xee\x35\x64\x52\xa4\x71\xab\x92\xd6\x57\x8d\x72\xf2\x9b\x7c\x39\xf7\x79\x06\xc9\x33\xe3\x7b\xb3\x88\x2c\x7f\x5c\x2f\x95\xfb\x0b\x00\x00\xff\xff\xa4\x20\x3f\x73\xf0\x01\x00\x00")

func goServiceTemplateMakefileBytes() ([]byte, error) {
	return bindataRead(
		_goServiceTemplateMakefile,
		"go-service-template/Makefile",
	)
}

func goServiceTemplateMakefile() (*asset, error) {
	bytes, err := goServiceTemplateMakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "go-service-template/Makefile", size: 496, mode: os.FileMode(420), modTime: time.Unix(1549574591, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _goServiceTemplateReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x4c\x49\x51\x48\xcc\xc9\x51\xc8\x4b\x4d\x4e\x2d\x2e\x4e\x2c\xaa\x54\x28\x28\xca\xcf\x4a\x4d\x2e\xd1\x2d\x4a\x4d\xcc\x29\x49\x4d\x51\xc8\xcc\x4b\xcb\x57\xc8\x48\x2d\x4a\xe5\x02\x04\x00\x00\xff\xff\x41\x19\xbb\xd9\x2c\x00\x00\x00")

func goServiceTemplateReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_goServiceTemplateReadmeMd,
		"go-service-template/README.md",
	)
}

func goServiceTemplateReadmeMd() (*asset, error) {
	bytes, err := goServiceTemplateReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "go-service-template/README.md", size: 44, mode: os.FileMode(420), modTime: time.Unix(1549821609, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _goServiceTemplateDeployReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\xc8\x49\x4c\x4e\x55\x48\xcc\xab\x54\x48\x49\x2d\xc8\xc9\xaf\xcc\x4d\xcd\x2b\xd1\x2d\x4a\xcd\x49\x2c\x49\x4d\x51\xc8\xc9\x4f\xcf\x4c\x56\xc8\x48\x2d\x4a\xe5\x02\x04\x00\x00\xff\xff\x39\x5a\x8f\xad\x28\x00\x00\x00")

func goServiceTemplateDeployReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_goServiceTemplateDeployReadmeMd,
		"go-service-template/deploy/README.md",
	)
}

func goServiceTemplateDeployReadmeMd() (*asset, error) {
	bytes, err := goServiceTemplateDeployReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "go-service-template/deploy/README.md", size: 40, mode: os.FileMode(420), modTime: time.Unix(1549556948, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _goServiceTemplateDockerComposeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\x28\xca\x2f\xcb\x4c\x49\x55\x48\x54\x48\xc9\x4f\xce\x4e\x2d\xd2\x4d\xce\xcf\x2d\xc8\x2f\x4e\x55\x48\xcb\x2f\x52\x28\xc9\x48\x55\x28\x4e\x2d\x2a\xcb\x4c\x4e\xe5\x02\x04\x00\x00\xff\xff\x3a\x2b\xe6\x96\x2b\x00\x00\x00")

func goServiceTemplateDockerComposeYmlBytes() ([]byte, error) {
	return bindataRead(
		_goServiceTemplateDockerComposeYml,
		"go-service-template/docker-compose.yml",
	)
}

func goServiceTemplateDockerComposeYml() (*asset, error) {
	bytes, err := goServiceTemplateDockerComposeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "go-service-template/docker-compose.yml", size: 43, mode: os.FileMode(420), modTime: time.Unix(1549556948, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _goServiceTemplateMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xc1\x8a\xdc\x30\x0c\x40\xcf\xd6\x57\xa8\x86\x82\x0d\x59\x0f\xbd\xb6\xcc\xa1\x87\x69\x3b\xd0\xee\xa1\x53\xe8\xd9\xeb\x75\x12\x13\xc7\x36\xb2\x12\x76\x29\xfb\xef\xc5\xc9\xec\xf6\x32\xb7\x5e\x02\x52\x24\xbd\x87\xe4\x62\xdd\x64\x07\x8f\xb3\x0d\x09\x20\xcc\x25\x13\xa3\x02\x21\xfb\x99\x25\x08\x99\xeb\xfe\x3d\xd4\x30\x24\x1b\x5b\x50\x9f\xab\xb3\x31\x4a\x00\x21\x87\xc0\xe3\xf2\x60\x5c\x9e\x0f\xc9\x8d\x9e\xd2\x61\xc8\x77\xd5\xd3\x1a\x9c\xbf\x63\x3f\x97\x68\xd9\xdf\xcc\x95\x69\x38\xb8\x18\xe4\x7f\x0f\xa9\xb4\x4a\xd0\x00\x2e\xa7\xba\xa9\xd7\xd5\xdd\xdb\xd9\xe3\x11\xe5\x8d\x9e\xa6\x5d\xc7\x4c\xfc\xcd\xc7\xd2\x6a\xde\x57\x0c\x15\x2d\x1a\x63\xb6\x39\xab\x25\x54\x1a\xa0\x5f\x92\xc3\x90\x02\x2b\x8d\x7f\x40\xb8\x18\xcc\xb9\x45\x20\x5e\x09\x1d\x08\x21\xbf\xe7\x34\xe0\xe8\x63\x91\x2d\xec\x67\x36\x97\x42\x21\x71\xaf\xde\x28\x1d\x5e\x1b\x74\x2b\xa1\x25\x7d\x4e\x8f\xbf\x6d\xe0\x0e\x84\x86\x97\x2b\xe9\x5f\x7a\xe7\x0d\x19\x2b\xad\xe6\xc2\x96\x58\xbd\xf6\x03\x08\x87\x1f\x8f\x38\xdb\xc9\x2b\x37\xda\x84\xb9\x9a\xcb\x76\x99\x0e\x3f\x68\x10\xfb\x95\xcc\x7d\xe6\xd0\x3f\x2b\xd7\xb5\xff\xe7\xc4\x9e\x68\x29\xdc\xe1\xf5\x74\xe6\x72\xfe\xfa\xeb\xf4\xf3\x87\x06\xd1\x67\x42\xb2\x69\xf0\xe8\x1a\x55\xec\xcc\x5c\x94\x06\x21\x1e\xc8\xdb\x09\xc4\xcb\x9b\x64\x7b\x25\xbb\x5e\xe8\xd1\x13\x35\x97\xb6\x98\xd3\x93\x77\x0b\x7b\xa5\x3f\x6d\xd9\x77\x47\x4c\x21\x6e\xf3\xda\x42\xbe\x6c\x0b\x89\x49\x35\x59\x7e\xf4\x44\x5d\x2b\x6b\x84\x5c\xcd\xe9\x29\xb0\x6a\xee\x0d\xf3\x37\x00\x00\xff\xff\x64\x88\xaa\x8e\x8f\x02\x00\x00")

func goServiceTemplateMainGoBytes() ([]byte, error) {
	return bindataRead(
		_goServiceTemplateMainGo,
		"go-service-template/main.go",
	)
}

func goServiceTemplateMainGo() (*asset, error) {
	bytes, err := goServiceTemplateMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "go-service-template/main.go", size: 655, mode: os.FileMode(420), modTime: time.Unix(1549557279, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _goServiceTemplatePkgReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\xc8\x49\x4c\x4e\x55\x48\x2c\x28\xc8\xc9\x4c\x4e\x2c\xc9\xcc\xcf\xd3\x2d\x4a\xcd\x49\x2c\x49\x4d\x51\x48\xcf\x57\x28\x48\x4c\xce\x4e\x4c\x4f\x2d\x56\xc8\x48\x2d\x4a\xe5\x02\x04\x00\x00\xff\xff\xcf\x59\x5b\x47\x2b\x00\x00\x00")

func goServiceTemplatePkgReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_goServiceTemplatePkgReadmeMd,
		"go-service-template/pkg/README.md",
	)
}

func goServiceTemplatePkgReadmeMd() (*asset, error) {
	bytes, err := goServiceTemplatePkgReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "go-service-template/pkg/README.md", size: 43, mode: os.FileMode(420), modTime: time.Unix(1549556948, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _goServiceTemplatePkgCliCliGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x41\x8b\xdb\x30\x10\x85\xcf\xd2\xaf\x78\xf8\x50\xec\x92\x4d\x28\xbd\x05\x7a\x58\xc2\x42\x17\x96\x1e\x5a\x7a\x2a\x3d\x28\xf2\xd8\x19\x2a\x8f\x8c\x3c\xde\xee\x12\xf2\xdf\x8b\xec\xc4\xad\x29\xec\x75\xe6\xe9\xbd\xd1\xf7\x7a\xe7\x7f\xb9\x96\xe0\x03\x5b\xcb\x5d\x1f\x93\xa2\xb4\xa6\x68\x59\x4f\xe3\x71\xeb\x63\xb7\x1b\xfa\xe6\xc3\xc7\x9d\x8f\xc7\xe4\x0a\x5b\x59\xfb\xec\x52\x96\xf8\xc0\x87\xae\xc6\x27\xbc\x9b\x56\xdb\x43\xec\x3a\x27\xf5\xd9\x1a\xf3\x7d\xa0\x3d\x80\xc2\x07\x2e\x36\xd6\x98\x6f\xa7\x98\x74\x8f\xe2\xe1\xa5\x8f\x03\x0d\xf0\xb3\x14\x81\x85\xc0\xa2\x94\x1a\xe7\x29\x4b\x2f\xd6\x9a\x14\xa3\x66\xe7\xf7\x2b\xdf\x9c\xbc\xdb\xe1\x51\x58\xc1\xc2\xca\x2e\x70\xf6\xd2\x13\x21\xbf\x58\x4c\x63\x33\xcd\x46\xe5\xc0\xfa\x9a\xdf\xe0\x0e\x35\x35\x6e\x0c\x7a\xef\x95\xa3\xe0\x37\x87\x80\x23\x81\x5e\xc8\x8f\x4a\x35\xb8\x81\x44\x0c\xe3\xf1\xee\xe6\xc2\x03\x5a\x7e\x26\xb1\xcd\x28\x7e\x4a\x2d\x5d\xdf\x7f\x71\x1d\x61\xd0\xc4\xd2\x6e\x10\xa2\xb4\x9f\x29\xf4\xcb\x60\xc8\xdf\x5c\x4d\xd6\xb1\xd9\xaa\xac\x2a\x9c\xff\xfe\xf1\x0d\x7a\xd7\xb8\xcc\xef\x29\x4a\xbb\xc7\x12\xf8\x0f\xd2\x25\x32\xcf\xbe\x8e\xb2\x9f\x43\xfc\x7f\xf8\x36\x70\xa9\x1d\xf0\xe3\xe7\x7c\xda\x74\x84\x31\xab\xfb\xca\xca\x1a\x73\x99\x4a\xb8\xdd\xb7\xbd\xaf\xeb\xab\x41\x39\xf7\x5d\xd9\x5b\xf3\xab\x5d\x22\xa7\x34\xad\x2f\x53\x4d\x0f\x33\xd9\x8c\xd1\x09\x48\x34\xbd\xa2\x8f\x2c\x0a\x8d\x38\x3c\x3d\xce\x58\xaf\xaa\xb2\x02\xa5\x14\xd3\x04\x86\x74\x4c\x82\x5b\xfe\xa2\xb0\x17\xfb\x27\x00\x00\xff\xff\xb5\x53\x93\x46\xab\x02\x00\x00")

func goServiceTemplatePkgCliCliGoBytes() ([]byte, error) {
	return bindataRead(
		_goServiceTemplatePkgCliCliGo,
		"go-service-template/pkg/cli/cli.go",
	)
}

func goServiceTemplatePkgCliCliGo() (*asset, error) {
	bytes, err := goServiceTemplatePkgCliCliGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "go-service-template/pkg/cli/cli.go", size: 683, mode: os.FileMode(420), modTime: time.Unix(1549556948, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _goServiceTemplatePkgCliCreateGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xcd\x4a\xec\x40\x10\x85\xd7\x5d\x4f\x71\xe8\xc5\x65\xe6\x12\x12\xc4\x5d\xc0\x55\x5e\x40\x14\x57\x22\x4c\xa5\xd3\x49\x5a\xd3\x3f\x74\x57\x54\x18\xe6\xdd\x25\x93\x59\xe8\xb6\xea\xe3\x9c\xaf\x2a\xb1\xf9\xe0\xc9\xc2\x2c\x8e\xc8\xf9\x14\xb3\xe0\x40\x4a\x8f\x5e\x34\x91\xd2\x93\x93\x79\xed\x6b\x13\x7d\x53\xd2\x78\x77\xdf\x98\xd8\x67\xd6\x74\x24\x6a\x1a\x98\x6c\x59\x6c\xe7\x07\xb8\x02\x99\x2d\x12\x67\x71\x66\x5d\x38\xc3\xf9\xb4\x58\x6f\x83\xb0\xb8\x18\x10\x47\x9c\x76\xfc\x84\xb2\xf6\x26\x7a\xcf\x61\xa8\xe9\x93\xf3\xaf\x98\x07\xfc\xbb\x16\xd4\xdd\xbe\x3f\x93\x7a\x29\xb6\x05\xa0\x77\x48\x57\xa4\x9e\xe7\x98\xa5\x85\xee\xae\x93\x02\x46\xb0\x5f\x48\x39\xbe\x5b\x23\x1b\xf0\xb4\x86\x16\xe3\x1a\xcc\xc1\xf8\x01\xff\xff\x24\x56\xe0\x3c\x15\xbc\xbe\x15\xc9\x2e\x4c\x47\x9c\x49\xa9\xd1\x4b\xfd\x98\x5d\x90\x25\x1c\x6e\x45\x2d\x38\xc0\x7e\xf3\x76\xc5\x26\xcf\xdb\x8b\x70\xd3\xd6\x47\x52\x97\x8a\x2e\xf4\x13\x00\x00\xff\xff\x69\x76\x04\x74\x3f\x01\x00\x00")

func goServiceTemplatePkgCliCreateGoBytes() ([]byte, error) {
	return bindataRead(
		_goServiceTemplatePkgCliCreateGo,
		"go-service-template/pkg/cli/create.go",
	)
}

func goServiceTemplatePkgCliCreateGo() (*asset, error) {
	bytes, err := goServiceTemplatePkgCliCreateGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "go-service-template/pkg/cli/create.go", size: 319, mode: os.FileMode(420), modTime: time.Unix(1549556948, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _goServiceTemplatePkgSrvSrvGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\x5d\x4a\x05\x31\x0c\x46\x9f\xed\x2a\x3e\x0a\xc2\x5c\x90\xde\x9d\x88\xe0\x0a\x42\x4d\x6b\xb1\x93\x94\xa4\x33\x22\xe2\xde\xa5\xfe\x3c\xdc\xd7\x84\xef\x9c\x33\x28\xbf\x51\x65\xb8\x9d\x21\xb4\x7d\xa8\x4d\xc4\xae\x35\x86\x70\xbd\xe2\x79\x92\x4d\xd8\x21\x8e\xf9\xca\xa0\xd1\xe0\x6c\x27\x5b\x28\x87\xe4\xdf\xf7\x26\xb4\x33\x7c\x5a\x93\x7a\xc1\x67\xb8\xeb\x5a\xd3\x93\x35\x99\x65\x8b\x8f\xaa\x03\xf7\xbe\xf0\x68\xbe\x48\xd2\xa4\xc6\x07\xac\xd1\x25\x7c\xfd\x59\x74\x60\xb0\x15\xb5\xdd\x41\xbd\x43\x38\xb3\x3b\xd9\x07\x74\xb0\xd1\x6c\x2a\x8e\xa2\x86\x6a\x94\xb9\x1c\xfd\x27\xa3\x65\xc6\x64\x32\xbc\xe8\xbb\xa4\xff\x24\x1d\xdb\x6d\x46\x97\x2d\xae\xf3\x68\x52\x53\x4a\x71\x69\xbf\x03\x00\x00\xff\xff\xac\x43\x32\x89\xf7\x00\x00\x00")

func goServiceTemplatePkgSrvSrvGoBytes() ([]byte, error) {
	return bindataRead(
		_goServiceTemplatePkgSrvSrvGo,
		"go-service-template/pkg/srv/srv.go",
	)
}

func goServiceTemplatePkgSrvSrvGo() (*asset, error) {
	bytes, err := goServiceTemplatePkgSrvSrvGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "go-service-template/pkg/srv/srv.go", size: 247, mode: os.FileMode(420), modTime: time.Unix(1549556948, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _goServiceTemplateScriptsBuildSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\x3b\x53\x7c\xc3\x00\xac\xe2\x0a\xa5\x34\xf6\x27\x0d\x18\x8b\x07\xb7\xf7\xd5\xa3\x75\xce\x96\x5e\x00\xa0\x54\x9c\x21\x6a\x90\xf9\x21\xd7\xed\xcc\x4d\x95\x6d\x03\xfd\x65\x0c\xc4\xba\xa8\x70\x7b\xac\xfc\x01\x00\x00\xff\xff\x6b\xdc\xfd\xbd\x3a\x00\x00\x00")

func goServiceTemplateScriptsBuildShBytes() ([]byte, error) {
	return bindataRead(
		_goServiceTemplateScriptsBuildSh,
		"go-service-template/scripts/build.sh",
	)
}

func goServiceTemplateScriptsBuildSh() (*asset, error) {
	bytes, err := goServiceTemplateScriptsBuildShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "go-service-template/scripts/build.sh", size: 58, mode: os.FileMode(420), modTime: time.Unix(1549556948, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"go-service-template/Dockerfile": goServiceTemplateDockerfile,
	"go-service-template/Makefile": goServiceTemplateMakefile,
	"go-service-template/README.md": goServiceTemplateReadmeMd,
	"go-service-template/deploy/README.md": goServiceTemplateDeployReadmeMd,
	"go-service-template/docker-compose.yml": goServiceTemplateDockerComposeYml,
	"go-service-template/main.go": goServiceTemplateMainGo,
	"go-service-template/pkg/README.md": goServiceTemplatePkgReadmeMd,
	"go-service-template/pkg/cli/cli.go": goServiceTemplatePkgCliCliGo,
	"go-service-template/pkg/cli/create.go": goServiceTemplatePkgCliCreateGo,
	"go-service-template/pkg/srv/srv.go": goServiceTemplatePkgSrvSrvGo,
	"go-service-template/scripts/build.sh": goServiceTemplateScriptsBuildSh,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"go-service-template": &bintree{nil, map[string]*bintree{
		"Dockerfile": &bintree{goServiceTemplateDockerfile, map[string]*bintree{}},
		"Makefile": &bintree{goServiceTemplateMakefile, map[string]*bintree{}},
		"README.md": &bintree{goServiceTemplateReadmeMd, map[string]*bintree{}},
		"deploy": &bintree{nil, map[string]*bintree{
			"README.md": &bintree{goServiceTemplateDeployReadmeMd, map[string]*bintree{}},
		}},
		"docker-compose.yml": &bintree{goServiceTemplateDockerComposeYml, map[string]*bintree{}},
		"main.go": &bintree{goServiceTemplateMainGo, map[string]*bintree{}},
		"pkg": &bintree{nil, map[string]*bintree{
			"README.md": &bintree{goServiceTemplatePkgReadmeMd, map[string]*bintree{}},
			"cli": &bintree{nil, map[string]*bintree{
				"cli.go": &bintree{goServiceTemplatePkgCliCliGo, map[string]*bintree{}},
				"create.go": &bintree{goServiceTemplatePkgCliCreateGo, map[string]*bintree{}},
			}},
			"srv": &bintree{nil, map[string]*bintree{
				"srv.go": &bintree{goServiceTemplatePkgSrvSrvGo, map[string]*bintree{}},
			}},
		}},
		"scripts": &bintree{nil, map[string]*bintree{
			"build.sh": &bintree{goServiceTemplateScriptsBuildSh, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

